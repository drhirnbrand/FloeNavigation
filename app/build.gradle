apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 29
    lintOptions {

        checkReleaseBuilds false

    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        release {
            keyAlias keystoreProperties['keyAliasDebug']
            keyPassword keystoreProperties['keyPasswordDebug']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "de.awi.floenavigation"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 3
        versionName "1.1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled false
        vectorDrawables.useSupportLibrary = false
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable = true
        }
        release {
            minifyEnabled = true
            shrinkResources = true
            debuggable = true
            signingConfig signingConfigs.release
        }
        optimized {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable = false
            jniDebuggable = false
            renderscriptDebuggable = false
            signingConfig signingConfigs.release
            applicationIdSuffix ".optimized"
        }
    }
    buildToolsVersion '29.0.2'

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    lintOptions {
        // Returns whether lint should be quiet (for example, not write informational messages such as paths to report files written)
        quiet false

        // Whether lint should set the exit code of the process if errors are found
        abortOnError false

        // Returns whether lint will only check for errors (ignoring warnings)
        ignoreWarnings true

        // Returns whether lint should check for fatal errors during release builds. Default is true.
        // If issues with severity "fatal" are found, the release build is aborted.
        checkReleaseBuilds true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api 'io.github.yavski:fab-speed-dial:1.0.6'
    implementation 'io.github.yavski:fab-speed-dial:1.0.6'

    testImplementation 'junit:junit:4.12'

    implementation 'com.scalified:fab:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Added Libraries
    implementation 'gr.pantrif:easy-android-splash-screen:0.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.android.volley:volley:1.1.1'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    //Custom Libraries

    implementation 'org.kie.modules:org-apache-commons-net:6.5.0.Final'
}
